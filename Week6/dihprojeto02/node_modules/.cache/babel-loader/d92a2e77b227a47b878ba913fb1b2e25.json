{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Francisco\\\\Documents\\\\Files\\\\DEVinHouse\\\\Week6\\\\dihprojeto02\\\\src\\\\pages\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Process from '../models/Process';\nimport '../styles/Register.css';\nimport { getName } from '../utils/ProcessNaming';\nimport ProcessService from '../services/ProcessService';\n\nconst Register = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [process, setProcess] = useState(EMPTY_PROCESS);\n  useEffect(() => {}, [process]);\n\n  const setProcessProperty = (property, value) => {\n    setProcess({ ...process,\n      [property]: value\n    });\n    console.log(process, property, value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'register__root',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'register__form--wrapper',\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: 'title',\n        children: \"Cadastro de processo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: 'register__form',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              htmlFor: 'processNameInput',\n              children: \"Assunto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: 'register__form--input',\n              id: 'processNameInput',\n              name: 'processName',\n              onChange: ({\n                target\n              }) => setProcessProperty(target.name, target.value),\n              type: 'text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: process && process.processConcernment.length > 0 && process.processConcernment.map(processConcernment => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: processConcernment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--footer',\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'register__form--button button__label',\n            children: \"SALVAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"EfK0fIzQ4ZN5aLYs3s4Ul6A/QXw=\", false, function () {\n  return [useParams];\n});\n\n_c = Register;\nconst EMPTY_PROCESS = new Process('A', 'B', 'C', ['D', 'E']);\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/pages/Register.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","useParams","Process","getName","ProcessService","Register","props","id","process","setProcess","EMPTY_PROCESS","setProcessProperty","property","value","console","log","target","name","processConcernment","length","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport Process from '../models/Process';\r\nimport '../styles/Register.css';\r\nimport { getName } from '../utils/ProcessNaming';\r\nimport ProcessService from '../services/ProcessService';\r\n\r\nconst Register = props => {\r\n    const { id } = useParams();\r\n    const [process, setProcess] = useState(EMPTY_PROCESS);\r\n\r\n    useEffect(() => {\r\n    }, [process]);\r\n\r\n    const setProcessProperty = (property, value) => {\r\n        setProcess({ ...process, [property]: value });\r\n        console.log(process, property, value);\r\n    }\r\n\r\n    return (\r\n        <div className={'register__root'}>\r\n            <div className={'register__form--wrapper'}>\r\n                <h2 className={'title'}>Cadastro de processo</h2>\r\n                <form className={'register__form'}>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}\r\n                                htmlFor={'processNameInput'}>\r\n                                Assunto\r\n                            </label>\r\n                            <input\r\n                                className={'register__form--input'}\r\n                                id={'processNameInput'}\r\n                                name={'processName'}\r\n                                onChange={({ target }) => setProcessProperty(target.name, target.value)}\r\n                                type={'text'} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            {\r\n                                process &&\r\n                                process.processConcernment.length > 0 &&\r\n                                process.processConcernment.map(processConcernment =>\r\n                                    <span>{processConcernment}</span>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}></div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}></div>\r\n                    </div>\r\n                    <div className={'register__form--footer'}>\r\n                        <button className={'register__form--button button__label'}>SALVAR</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nconst EMPTY_PROCESS =\r\n    new Process(\r\n        'A',\r\n        'B',\r\n        'C',\r\n        ['D', 'E']\r\n    );\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}