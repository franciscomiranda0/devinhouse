{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Francisco\\\\Documents\\\\Files\\\\DEVinHouse\\\\Week6\\\\dihprojeto02\\\\src\\\\pages\\\\Register.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Process from '../models/Process';\nimport '../styles/Register.css';\nimport { getName } from '../utils/ProcessNaming';\nimport ProcessService from '../services/ProcessService';\n\nconst Register = ({\n  processRegisteringData\n}) => {\n  // const { id } = useParams();\n  // const [process, setProcess] = useState(EMPTY_PROCESS);\n  // const [processConcernment, setProcessConcernment] = useState('');\n  // const setProcess = () => { return; }\n  // useEffect(() => {\n  // }, [processRegisteringData]);\n  // useEffect(() => {\n  // }, [processConcernment]);\n  // const emptyForm = () => {\n  //     document.querySelector('form').reset();\n  //     setProcess(EMPTY_PROCESS);\n  // }\n  // const handleSave = process => {\n  //     ProcessService\n  //         .createProcess(process)\n  //         .then(() => emptyForm())\n  //         .catch(err => console.error(err));\n  // }\n  // const setProcessProperty = (property, value) => {\n  //     if (property == 'processConcernment') {\n  //         setProcess({ ...processRegisteringData }, processRegisteringData.processConcernment.push(processConcernment));\n  //         document.querySelector('#processConcernmentInput').value = '';\n  //         setProcessConcernment('');\n  //         return;\n  //     }\n  //     setProcess({ ...processRegisteringData, [property]: value });\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'register__root',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'register__form--wrapper',\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: 'title',\n        children: \"Cadastro de processo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: 'register__form',\n        onSubmit: event => {\n          event.preventDefault(); // handleSave(processRegisteringData);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              htmlFor: 'processSubjectInput',\n              children: \"Assunto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: 'register__form--input',\n              id: 'processSubjectInput',\n              name: 'processSubject' // onChange={({ target }) => setProcessProperty(target.name, target.value)}\n              ,\n              type: 'text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              children: \"Interessados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), processRegisteringData && processRegisteringData.processConcernment && processRegisteringData.processConcernment.length > 0 && processRegisteringData.processConcernment.map((processConcernment, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: processConcernment\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              htmlFor: 'processConcernmentInput',\n              children: \"Novo Interessado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: 'register__form--input',\n              id: 'processConcernmentInput',\n              name: 'processConcernment' // onChange={({ target }) => setProcessConcernment(target.value)}\n              ,\n              type: 'text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'register__form--button button__label button',\n              disabled: processConcernment.length == 0,\n              id: 'add__button',\n              onClick: event => {\n                event.preventDefault(); // setProcessProperty('processConcernment', event.target.value)\n              },\n              children: \"ADICIONAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              htmlFor: 'processDescriptionInput',\n              children: \"Descri\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: 'register__form--input full-width',\n              id: 'processDescriptionInput',\n              name: 'processDescription' // onChange={({ target }) => setProcessProperty(target.name, target.value)}\n              ,\n              type: 'text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--footer',\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'register__form--button button__label',\n            type: 'submit',\n            children: \"SALVAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Register;\nexport default connect(state => ({\n  processRegisteringData: state\n}))(Register);\nconst EMPTY_PROCESS = {\n  processName: '',\n  processSubject: '',\n  processDescription: '',\n  processConcernment: []\n}; // const Register = props => {\n//     const { id } = useParams();\n//     const [process, setProcess] = useState(EMPTY_PROCESS);\n//     const [processConcernment, setProcessConcernment] = useState('');\n//     useEffect(() => {\n//     }, [process]);\n//     useEffect(() => {\n//     }, [processConcernment]);\n//     const emptyForm = () => {\n//         document.querySelector('form').reset();\n//         setProcess(EMPTY_PROCESS);\n//     }\n//     const handleSave = process => {\n//         ProcessService\n//             .createProcess(process)\n//             .then(() => emptyForm())\n//             .catch(err => console.error(err));\n//     }\n//     const setProcessProperty = (property, value) => {\n//         if (property == 'processConcernment') {\n//             setProcess({ ...process }, process.processConcernment.push(processConcernment));\n//             document.querySelector('#processConcernmentInput').value = '';\n//             setProcessConcernment('');\n//             return;\n//         }\n//         setProcess({ ...process, [property]: value });\n//     }\n//     return (\n//         <div className={'register__root'}>\n//             <div className={'register__form--wrapper'}>\n//                 <h2 className={'title'}>Cadastro de processo</h2>\n//                 <form\n//                     className={'register__form'}\n//                     onSubmit={event => {\n//                         event.preventDefault();\n//                         handleSave(process);\n//                     }}>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}\n//                                 htmlFor={'processSubjectInput'}>\n//                                 Assunto\n//                             </label>\n//                             <input\n//                                 className={'register__form--input'}\n//                                 id={'processSubjectInput'}\n//                                 name={'processSubject'}\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\n//                                 type={'text'} />\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}>\n//                                 Interessados\n//                             </label>\n//                             {\n//                                 process &&\n//                                 process.processConcernment &&\n//                                 process.processConcernment.length > 0 &&\n//                                 process.processConcernment.map((processConcernment, index) =>\n//                                     <span key={index}>{processConcernment}</span>\n//                                 )\n//                             }\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}\n//                                 htmlFor={'processConcernmentInput'}>\n//                                 Novo Interessado\n//                             </label>\n//                             <input\n//                                 className={'register__form--input'}\n//                                 id={'processConcernmentInput'}\n//                                 name={'processConcernment'}\n//                                 onChange={({ target }) => setProcessConcernment(target.value)}\n//                                 type={'text'} />\n//                         </div>\n//                         <div className={'register__form--cell'}>\n//                             <button\n//                                 className={'register__form--button button__label button'}\n//                                 disabled={processConcernment.length == 0}\n//                                 id={'add__button'}\n//                                 onClick={event => {\n//                                     event.preventDefault();\n//                                     setProcessProperty('processConcernment', event.target.value)\n//                                 }}>\n//                                 ADICIONAR\n//                             </button>\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}\n//                                 htmlFor={'processDescriptionInput'}>\n//                                 Descrição\n//                             </label>\n//                             <textarea\n//                                 className={'register__form--input full-width'}\n//                                 id={'processDescriptionInput'}\n//                                 name={'processDescription'}\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\n//                                 type={'text'} />\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--footer'}>\n//                         <button\n//                             className={'register__form--button button__label'}\n//                             type={'submit'}>\n//                             SALVAR\n//                         </button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div >\n//     )\n// }\n// const EMPTY_PROCESS = {\n//     processName: '',\n//     processSubject: '',\n//     processDescription: '',\n//     processConcernment: [],\n// }\n// export default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/pages/Register.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","connect","useParams","Process","getName","ProcessService","Register","processRegisteringData","event","preventDefault","processConcernment","length","map","index","state","EMPTY_PROCESS","processName","processSubject","processDescription"],"mappings":"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":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport Process from '../models/Process';\r\nimport '../styles/Register.css';\r\nimport { getName } from '../utils/ProcessNaming';\r\nimport ProcessService from '../services/ProcessService';\r\n\r\nconst Register = ({ processRegisteringData }) => {\r\n    // const { id } = useParams();\r\n    // const [process, setProcess] = useState(EMPTY_PROCESS);\r\n    // const [processConcernment, setProcessConcernment] = useState('');\r\n\r\n    // const setProcess = () => { return; }\r\n\r\n    // useEffect(() => {\r\n    // }, [processRegisteringData]);\r\n\r\n    // useEffect(() => {\r\n    // }, [processConcernment]);\r\n\r\n    // const emptyForm = () => {\r\n    //     document.querySelector('form').reset();\r\n    //     setProcess(EMPTY_PROCESS);\r\n    // }\r\n\r\n    // const handleSave = process => {\r\n    //     ProcessService\r\n    //         .createProcess(process)\r\n    //         .then(() => emptyForm())\r\n    //         .catch(err => console.error(err));\r\n    // }\r\n\r\n    // const setProcessProperty = (property, value) => {\r\n    //     if (property == 'processConcernment') {\r\n    //         setProcess({ ...processRegisteringData }, processRegisteringData.processConcernment.push(processConcernment));\r\n    //         document.querySelector('#processConcernmentInput').value = '';\r\n    //         setProcessConcernment('');\r\n    //         return;\r\n    //     }\r\n    //     setProcess({ ...processRegisteringData, [property]: value });\r\n    // }\r\n\r\n    return (\r\n        <div className={'register__root'}>\r\n            <div className={'register__form--wrapper'}>\r\n                <h2 className={'title'}>Cadastro de processo</h2>\r\n                <form\r\n                    className={'register__form'}\r\n                    onSubmit={event => {\r\n                        event.preventDefault();\r\n                        // handleSave(processRegisteringData);\r\n                    }}>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}\r\n                                htmlFor={'processSubjectInput'}>\r\n                                Assunto\r\n                            </label>\r\n                            <input\r\n                                className={'register__form--input'}\r\n                                id={'processSubjectInput'}\r\n                                name={'processSubject'}\r\n                                // onChange={({ target }) => setProcessProperty(target.name, target.value)}\r\n                                type={'text'} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}>\r\n                                Interessados\r\n                            </label>\r\n                            {\r\n                                processRegisteringData &&\r\n                                processRegisteringData.processConcernment &&\r\n                                processRegisteringData.processConcernment.length > 0 &&\r\n                                processRegisteringData.processConcernment.map((processConcernment, index) =>\r\n                                    <span key={index}>{processConcernment}</span>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}\r\n                                htmlFor={'processConcernmentInput'}>\r\n                                Novo Interessado\r\n                            </label>\r\n                            <input\r\n                                className={'register__form--input'}\r\n                                id={'processConcernmentInput'}\r\n                                name={'processConcernment'}\r\n                                // onChange={({ target }) => setProcessConcernment(target.value)}\r\n                                type={'text'} />\r\n                        </div>\r\n                        <div className={'register__form--cell'}>\r\n                            <button\r\n                                className={'register__form--button button__label button'}\r\n                                disabled={processConcernment.length == 0}\r\n                                id={'add__button'}\r\n                                onClick={event => {\r\n                                    event.preventDefault();\r\n                                    // setProcessProperty('processConcernment', event.target.value)\r\n                                }}>\r\n                                ADICIONAR\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}\r\n                                htmlFor={'processDescriptionInput'}>\r\n                                Descrição\r\n                            </label>\r\n                            <textarea\r\n                                className={'register__form--input full-width'}\r\n                                id={'processDescriptionInput'}\r\n                                name={'processDescription'}\r\n                                // onChange={({ target }) => setProcessProperty(target.name, target.value)}\r\n                                type={'text'} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--footer'}>\r\n                        <button\r\n                            className={'register__form--button button__label'}\r\n                            type={'submit'}>\r\n                            SALVAR\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default connect(state => ({ processRegisteringData: state }))(Register);\r\n\r\nconst EMPTY_PROCESS = {\r\n    processName: '',\r\n    processSubject: '',\r\n    processDescription: '',\r\n    processConcernment: [],\r\n}\r\n// const Register = props => {\r\n//     const { id } = useParams();\r\n//     const [process, setProcess] = useState(EMPTY_PROCESS);\r\n//     const [processConcernment, setProcessConcernment] = useState('');\r\n\r\n//     useEffect(() => {\r\n//     }, [process]);\r\n\r\n//     useEffect(() => {\r\n//     }, [processConcernment]);\r\n\r\n//     const emptyForm = () => {\r\n//         document.querySelector('form').reset();\r\n//         setProcess(EMPTY_PROCESS);\r\n//     }\r\n\r\n//     const handleSave = process => {\r\n//         ProcessService\r\n//             .createProcess(process)\r\n//             .then(() => emptyForm())\r\n//             .catch(err => console.error(err));\r\n//     }\r\n\r\n//     const setProcessProperty = (property, value) => {\r\n//         if (property == 'processConcernment') {\r\n//             setProcess({ ...process }, process.processConcernment.push(processConcernment));\r\n//             document.querySelector('#processConcernmentInput').value = '';\r\n//             setProcessConcernment('');\r\n//             return;\r\n//         }\r\n//         setProcess({ ...process, [property]: value });\r\n//     }\r\n\r\n//     return (\r\n//         <div className={'register__root'}>\r\n//             <div className={'register__form--wrapper'}>\r\n//                 <h2 className={'title'}>Cadastro de processo</h2>\r\n//                 <form\r\n//                     className={'register__form'}\r\n//                     onSubmit={event => {\r\n//                         event.preventDefault();\r\n//                         handleSave(process);\r\n//                     }}>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}\r\n//                                 htmlFor={'processSubjectInput'}>\r\n//                                 Assunto\r\n//                             </label>\r\n//                             <input\r\n//                                 className={'register__form--input'}\r\n//                                 id={'processSubjectInput'}\r\n//                                 name={'processSubject'}\r\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\r\n//                                 type={'text'} />\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}>\r\n//                                 Interessados\r\n//                             </label>\r\n//                             {\r\n//                                 process &&\r\n//                                 process.processConcernment &&\r\n//                                 process.processConcernment.length > 0 &&\r\n//                                 process.processConcernment.map((processConcernment, index) =>\r\n//                                     <span key={index}>{processConcernment}</span>\r\n//                                 )\r\n//                             }\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}\r\n//                                 htmlFor={'processConcernmentInput'}>\r\n//                                 Novo Interessado\r\n//                             </label>\r\n//                             <input\r\n//                                 className={'register__form--input'}\r\n//                                 id={'processConcernmentInput'}\r\n//                                 name={'processConcernment'}\r\n//                                 onChange={({ target }) => setProcessConcernment(target.value)}\r\n//                                 type={'text'} />\r\n//                         </div>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <button\r\n//                                 className={'register__form--button button__label button'}\r\n//                                 disabled={processConcernment.length == 0}\r\n//                                 id={'add__button'}\r\n//                                 onClick={event => {\r\n//                                     event.preventDefault();\r\n//                                     setProcessProperty('processConcernment', event.target.value)\r\n//                                 }}>\r\n//                                 ADICIONAR\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}\r\n//                                 htmlFor={'processDescriptionInput'}>\r\n//                                 Descrição\r\n//                             </label>\r\n//                             <textarea\r\n//                                 className={'register__form--input full-width'}\r\n//                                 id={'processDescriptionInput'}\r\n//                                 name={'processDescription'}\r\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\r\n//                                 type={'text'} />\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--footer'}>\r\n//                         <button\r\n//                             className={'register__form--button button__label'}\r\n//                             type={'submit'}>\r\n//                             SALVAR\r\n//                         </button>\r\n//                     </div>\r\n//                 </form>\r\n//             </div>\r\n//         </div >\r\n//     )\r\n// }\r\n\r\n// const EMPTY_PROCESS = {\r\n//     processName: '',\r\n//     processSubject: '',\r\n//     processDescription: '',\r\n//     processConcernment: [],\r\n// }\r\n// export default Register;\r\n"]},"metadata":{},"sourceType":"module"}