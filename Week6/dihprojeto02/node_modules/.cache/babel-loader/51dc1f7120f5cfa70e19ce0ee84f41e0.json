{"ast":null,"code":"import ProcessService from '../../services/ProcessService';\nimport { processType } from '../type/processType';\nconst EMPTY_PROCESS = {\n  processName: '',\n  processSubject: '',\n  processDescription: '',\n  processConcerns: []\n};\nconst INITIAL_STATE = {\n  process: EMPTY_PROCESS,\n  newProcessConcerned: '',\n  processList: []\n};\nexport function processReducer(state = INITIAL_STATE, action) {\n  console.log('processRed', state, action);\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case processType.HANDLE_SAVE:\n      ProcessService.createProcess(payload.process).then(response => console.log(response)).catch(err => console.error(err));\n      break;\n\n    case processType.HANDLE_PROPERTY_CHANGE:\n      handlePropertyChange(state, payload);\n      break;\n\n    case processType.HANDLE_CONCERNS_CHANGE:\n      handleConcernsChange(state, payload);\n      break;\n\n    case processType.HANDLE_CONCERNS_ADDITION:\n      handleConcernsAddition(state);\n      break;\n  }\n\n  return state;\n}\n\nconst handleConcernsAddition = state => {\n  state.process.processConcerns.push(state.newProcessConcerned);\n};\n\nconst handleConcernsChange = (state, payload) => {\n  state.newProcessConcerned = payload.value;\n};\n\nconst handlePropertyChange = (state, payload) => {\n  state.process = { ...state.process,\n    [payload.property]: payload.value\n  };\n};","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/redux/reducer/ProcessReducer.js"],"names":["ProcessService","processType","EMPTY_PROCESS","processName","processSubject","processDescription","processConcerns","INITIAL_STATE","process","newProcessConcerned","processList","processReducer","state","action","console","log","type","payload","HANDLE_SAVE","createProcess","then","response","catch","err","error","HANDLE_PROPERTY_CHANGE","handlePropertyChange","HANDLE_CONCERNS_CHANGE","handleConcernsChange","HANDLE_CONCERNS_ADDITION","handleConcernsAddition","push","value","property"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,+BAA3B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,EADK;AAElBC,EAAAA,cAAc,EAAE,EAFE;AAGlBC,EAAAA,kBAAkB,EAAE,EAHF;AAIlBC,EAAAA,eAAe,EAAE;AAJC,CAAtB;AAOA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAEN,aADS;AAElBO,EAAAA,mBAAmB,EAAE,EAFH;AAGlBC,EAAAA,WAAW,EAAE;AAHK,CAAtB;AAMA,OAAO,SAASC,cAAT,CAAwBC,KAAK,GAAGL,aAAhC,EAA+CM,MAA/C,EAAuD;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,KAA1B,EAAiCC,MAAjC;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,MAA1B;;AACA,UAAQG,IAAR;AACI,SAAKf,WAAW,CAACiB,WAAjB;AACIlB,MAAAA,cAAc,CACTmB,aADL,CACmBF,OAAO,CAACT,OAD3B,EAEKY,IAFL,CAEUC,QAAQ,IAAIP,OAAO,CAACC,GAAR,CAAYM,QAAZ,CAFtB,EAGKC,KAHL,CAGWC,GAAG,IAAIT,OAAO,CAACU,KAAR,CAAcD,GAAd,CAHlB;AAIA;;AACJ,SAAKtB,WAAW,CAACwB,sBAAjB;AACIC,MAAAA,oBAAoB,CAACd,KAAD,EAAQK,OAAR,CAApB;AACA;;AACJ,SAAKhB,WAAW,CAAC0B,sBAAjB;AACIC,MAAAA,oBAAoB,CAAChB,KAAD,EAAQK,OAAR,CAApB;AACA;;AACJ,SAAKhB,WAAW,CAAC4B,wBAAjB;AACIC,MAAAA,sBAAsB,CAAClB,KAAD,CAAtB;AACA;AAfR;;AAiBA,SAAOA,KAAP;AACH;;AAED,MAAMkB,sBAAsB,GAAIlB,KAAD,IAAW;AACtCA,EAAAA,KAAK,CAACJ,OAAN,CAAcF,eAAd,CACKyB,IADL,CACUnB,KAAK,CAACH,mBADhB;AAEH,CAHD;;AAKA,MAAMmB,oBAAoB,GAAG,CAAChB,KAAD,EAAQK,OAAR,KAAoB;AAC7CL,EAAAA,KAAK,CAACH,mBAAN,GAA4BQ,OAAO,CAACe,KAApC;AACH,CAFD;;AAIA,MAAMN,oBAAoB,GAAG,CAACd,KAAD,EAAQK,OAAR,KAAoB;AAC7CL,EAAAA,KAAK,CAACJ,OAAN,GAAgB,EACZ,GAAGI,KAAK,CAACJ,OADG;AAEZ,KAACS,OAAO,CAACgB,QAAT,GAAoBhB,OAAO,CAACe;AAFhB,GAAhB;AAIH,CALD","sourcesContent":["import ProcessService from '../../services/ProcessService';\r\nimport { processType } from '../type/processType';\r\n\r\nconst EMPTY_PROCESS = {\r\n    processName: '',\r\n    processSubject: '',\r\n    processDescription: '',\r\n    processConcerns: [],\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    process: EMPTY_PROCESS,\r\n    newProcessConcerned: '',\r\n    processList: []\r\n}\r\n\r\nexport function processReducer(state = INITIAL_STATE, action) {\r\n    console.log('processRed', state, action);\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case processType.HANDLE_SAVE:\r\n            ProcessService\r\n                .createProcess(payload.process)\r\n                .then(response => console.log(response))\r\n                .catch(err => console.error(err));\r\n            break;\r\n        case processType.HANDLE_PROPERTY_CHANGE:\r\n            handlePropertyChange(state, payload);\r\n            break;\r\n        case processType.HANDLE_CONCERNS_CHANGE:\r\n            handleConcernsChange(state, payload);\r\n            break;\r\n        case processType.HANDLE_CONCERNS_ADDITION:\r\n            handleConcernsAddition(state);\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nconst handleConcernsAddition = (state) => {\r\n    state.process.processConcerns\r\n        .push(state.newProcessConcerned);\r\n}\r\n\r\nconst handleConcernsChange = (state, payload) => {\r\n    state.newProcessConcerned = payload.value;\r\n}\r\n\r\nconst handlePropertyChange = (state, payload) => {\r\n    state.process = {\r\n        ...state.process,\r\n        [payload.property]: payload.value\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}