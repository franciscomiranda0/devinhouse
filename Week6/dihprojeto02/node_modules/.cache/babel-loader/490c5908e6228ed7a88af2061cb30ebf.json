{"ast":null,"code":"import { API_URL } from './API';\nimport { createServer, Model } from 'miragejs';\nimport { initialDatabase } from '../utils/db';\nexport function buildServer({\n  environment = 'development'\n} = {}) {\n  const server = createServer({\n    environment,\n    models: {\n      process: Model\n    },\n\n    seeds(server) {\n      server.db.loadData({\n        processes: initialDatabase\n      });\n    },\n\n    routes() {\n      this.namespace = API_URL;\n      this.post('/process', (schema, request) => schema.db.processes.insert(JSON.parse(request.requestBody)));\n      this.get('/process/:id', ({\n        db\n      }, request) => {\n        const x = db.processes.find(request.params.id).attrs;\n        console.log(x);\n        return x;\n      });\n      this.get('/process', ({\n        db\n      }) => db.processes);\n      this.put('/process', (schema, request) => schema.processes.create(JSON.parse(request.requestBody)));\n      this.delete('/process/:id', (schema, request) => {\n        return schema.db.processes.remove(request.params.id);\n      });\n    }\n\n  });\n  return server;\n}","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/services/mirage.js"],"names":["API_URL","createServer","Model","initialDatabase","buildServer","environment","server","models","process","seeds","db","loadData","processes","routes","namespace","post","schema","request","insert","JSON","parse","requestBody","get","x","find","params","id","attrs","console","log","put","create","delete","remove"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,EAAuBC,KAAvB,QAAoC,UAApC;AACA,SAASC,eAAT,QAAgC,aAAhC;AAEA,OAAO,SAASC,WAAT,CAAqB;AAAEC,EAAAA,WAAW,GAAG;AAAhB,IAAkC,EAAvD,EAA2D;AAC9D,QAAMC,MAAM,GAAGL,YAAY,CAAC;AACxBI,IAAAA,WADwB;AAExBE,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,EAAEN;AADL,KAFgB;;AAKxBO,IAAAA,KAAK,CAACH,MAAD,EAAS;AACVA,MAAAA,MAAM,CAACI,EAAP,CAAUC,QAAV,CAAmB;AACfC,QAAAA,SAAS,EAAET;AADI,OAAnB;AAGH,KATuB;;AAUxBU,IAAAA,MAAM,GAAG;AACL,WAAKC,SAAL,GAAiBd,OAAjB;AACA,WAAKe,IAAL,CAAU,UAAV,EAAsB,CAACC,MAAD,EAASC,OAAT,KAClBD,MAAM,CAACN,EAAP,CAAUE,SAAV,CACKM,MADL,CACYC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,WAAnB,CADZ,CADJ;AAIA,WAAKC,GAAL,CAAS,cAAT,EAAyB,CAAC;AAAEZ,QAAAA;AAAF,OAAD,EAASO,OAAT,KAAqB;AAC1C,cAAMM,CAAC,GAAGb,EAAE,CAACE,SAAH,CACLY,IADK,CACAP,OAAO,CAACQ,MAAR,CAAeC,EADf,EACmBC,KAD7B;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ;AACA,eAAOA,CAAP;AACH,OALD;AAMA,WAAKD,GAAL,CAAS,UAAT,EAAqB,CAAC;AAAEZ,QAAAA;AAAF,OAAD,KACjBA,EAAE,CAACE,SADP;AAGA,WAAKkB,GAAL,CAAS,UAAT,EAAqB,CAACd,MAAD,EAASC,OAAT,KACjBD,MAAM,CAACJ,SAAP,CACKmB,MADL,CACYZ,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,WAAnB,CADZ,CADJ;AAIA,WAAKW,MAAL,CAAY,cAAZ,EAA4B,CAAChB,MAAD,EAASC,OAAT,KAAqB;AAC7C,eAAOD,MAAM,CAACN,EAAP,CAAUE,SAAV,CACFqB,MADE,CACKhB,OAAO,CAACQ,MAAR,CAAeC,EADpB,CAAP;AAEH,OAHD;AAKH;;AAlCuB,GAAD,CAA3B;AAoCA,SAAOpB,MAAP;AACH","sourcesContent":["import { API_URL } from './API';\r\nimport { createServer, Model } from 'miragejs';\r\nimport { initialDatabase } from '../utils/db';\r\n\r\nexport function buildServer({ environment = 'development' } = {}) {\r\n    const server = createServer({\r\n        environment,\r\n        models: {\r\n            process: Model\r\n        },\r\n        seeds(server) {\r\n            server.db.loadData({\r\n                processes: initialDatabase\r\n            });\r\n        },\r\n        routes() {\r\n            this.namespace = API_URL;\r\n            this.post('/process', (schema, request) =>\r\n                schema.db.processes\r\n                    .insert(JSON.parse(request.requestBody))\r\n            );\r\n            this.get('/process/:id', ({ db }, request) => {\r\n                const x = db.processes\r\n                    .find(request.params.id).attrs;\r\n                console.log(x);\r\n                return x;\r\n            });\r\n            this.get('/process', ({ db }) =>\r\n                db.processes\r\n            );\r\n            this.put('/process', (schema, request) =>\r\n                schema.processes\r\n                    .create(JSON.parse(request.requestBody))\r\n            );\r\n            this.delete('/process/:id', (schema, request) => {\r\n                return schema.db.processes\r\n                    .remove(request.params.id)\r\n            }\r\n            );\r\n        }\r\n    });\r\n    return server;\r\n}"]},"metadata":{},"sourceType":"module"}