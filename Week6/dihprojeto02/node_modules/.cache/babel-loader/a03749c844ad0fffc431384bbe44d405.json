{"ast":null,"code":"import ProcessService from '../../services/ProcessService';\nimport { processType } from './processType';\nimport { EMPTY_PROCESS, INITIAL_STATE } from '../../utils/constants';\nexport function processReducer(state = INITIAL_STATE, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case processType.HANDLE_SAVE:\n      handleSave(ProcessService, state);\n      break;\n\n    case processType.HANDLE_PROPERTY_CHANGE:\n      handlePropertyChange(state, payload);\n      break;\n\n    case processType.HANDLE_CONCERNS_CHANGE:\n      handleConcernsChange(state, payload);\n      break;\n\n    case processType.HANDLE_CONCERNS_ADDITION:\n      handleConcernsAddition(state);\n      break;\n\n    case processType.ASYNC_LOAD:\n      return { ...state,\n        processList: payload\n      };\n\n    case processType.ASYNC_INSERT:\n      return { ...state,\n        process: EMPTY_PROCESS,\n        newProcessConcerned: ''\n      };\n\n    case processType.SET_DETAILING_OPTIONS:\n      return { ...state,\n        detailingEntry: payload.process,\n        showDetailingEntry: payload.flag\n      };\n\n    case processType.SET_ENTRY_DIALOG_OPTIONS:\n      return { ...state,\n        showEntryDialog: payload.flag,\n        processEntryId: payload.processEntryId\n      };\n\n    case processType.PROCESS_ENTRY_PROPERTY_CHANGE:\n      console.log(action, state);\n      return { ...state,\n        processEntry: { ...state.processEntry,\n          [payload.property]: payload.value\n        }\n      };\n  }\n\n  return state;\n}\n\nconst handleConcernsAddition = state => {\n  state.process.processConcerns.push(state.newProcessConcerned);\n};\n\nconst handleConcernsChange = (state, payload) => {\n  state.newProcessConcerned = payload.value;\n};\n\nconst handlePropertyChange = (state, payload) => {\n  state.process = { ...state.process,\n    [payload.property]: payload.value\n  };\n};\n\nconst handleSave = (processService, state) => {\n  processService.createProcess(state.process).then(response => console.log(response)).catch(err => console.error(err));\n};","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/redux/process/processReducer.js"],"names":["ProcessService","processType","EMPTY_PROCESS","INITIAL_STATE","processReducer","state","action","type","payload","HANDLE_SAVE","handleSave","HANDLE_PROPERTY_CHANGE","handlePropertyChange","HANDLE_CONCERNS_CHANGE","handleConcernsChange","HANDLE_CONCERNS_ADDITION","handleConcernsAddition","ASYNC_LOAD","processList","ASYNC_INSERT","process","newProcessConcerned","SET_DETAILING_OPTIONS","detailingEntry","showDetailingEntry","flag","SET_ENTRY_DIALOG_OPTIONS","showEntryDialog","processEntryId","PROCESS_ENTRY_PROPERTY_CHANGE","console","log","processEntry","property","value","processConcerns","push","processService","createProcess","then","response","catch","err","error"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,+BAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,uBAA7C;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAK,GAAGF,aAAhC,EAA+CG,MAA/C,EAAuD;AAC1D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACI,SAAKN,WAAW,CAACQ,WAAjB;AACIC,MAAAA,UAAU,CAACV,cAAD,EAAiBK,KAAjB,CAAV;AACA;;AACJ,SAAKJ,WAAW,CAACU,sBAAjB;AACIC,MAAAA,oBAAoB,CAACP,KAAD,EAAQG,OAAR,CAApB;AACA;;AACJ,SAAKP,WAAW,CAACY,sBAAjB;AACIC,MAAAA,oBAAoB,CAACT,KAAD,EAAQG,OAAR,CAApB;AACA;;AACJ,SAAKP,WAAW,CAACc,wBAAjB;AACIC,MAAAA,sBAAsB,CAACX,KAAD,CAAtB;AACA;;AACJ,SAAKJ,WAAW,CAACgB,UAAjB;AACI,aAAO,EACH,GAAGZ,KADA;AAEHa,QAAAA,WAAW,EAAEV;AAFV,OAAP;;AAIJ,SAAKP,WAAW,CAACkB,YAAjB;AACI,aAAO,EACH,GAAGd,KADA;AAEHe,QAAAA,OAAO,EAAElB,aAFN;AAGHmB,QAAAA,mBAAmB,EAAE;AAHlB,OAAP;;AAKJ,SAAKpB,WAAW,CAACqB,qBAAjB;AACI,aAAO,EACH,GAAGjB,KADA;AAEHkB,QAAAA,cAAc,EAAEf,OAAO,CAACY,OAFrB;AAGHI,QAAAA,kBAAkB,EAAEhB,OAAO,CAACiB;AAHzB,OAAP;;AAKJ,SAAKxB,WAAW,CAACyB,wBAAjB;AACI,aAAO,EACH,GAAGrB,KADA;AAEHsB,QAAAA,eAAe,EAAEnB,OAAO,CAACiB,IAFtB;AAGHG,QAAAA,cAAc,EAAEpB,OAAO,CAACoB;AAHrB,OAAP;;AAKJ,SAAK3B,WAAW,CAAC4B,6BAAjB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYzB,MAAZ,EAAoBD,KAApB;AACA,aAAO,EACH,GAAGA,KADA;AAEH2B,QAAAA,YAAY,EAAE,EACV,GAAG3B,KAAK,CAAC2B,YADC;AAEV,WAACxB,OAAO,CAACyB,QAAT,GAAoBzB,OAAO,CAAC0B;AAFlB;AAFX,OAAP;AAtCR;;AA8CA,SAAO7B,KAAP;AACH;;AAED,MAAMW,sBAAsB,GAAIX,KAAD,IAAW;AACtCA,EAAAA,KAAK,CAACe,OAAN,CAAce,eAAd,CACKC,IADL,CACU/B,KAAK,CAACgB,mBADhB;AAEH,CAHD;;AAKA,MAAMP,oBAAoB,GAAG,CAACT,KAAD,EAAQG,OAAR,KAAoB;AAC7CH,EAAAA,KAAK,CAACgB,mBAAN,GAA4Bb,OAAO,CAAC0B,KAApC;AACH,CAFD;;AAIA,MAAMtB,oBAAoB,GAAG,CAACP,KAAD,EAAQG,OAAR,KAAoB;AAC7CH,EAAAA,KAAK,CAACe,OAAN,GAAgB,EACZ,GAAGf,KAAK,CAACe,OADG;AAEZ,KAACZ,OAAO,CAACyB,QAAT,GAAoBzB,OAAO,CAAC0B;AAFhB,GAAhB;AAIH,CALD;;AAOA,MAAMxB,UAAU,GAAG,CAAC2B,cAAD,EAAiBhC,KAAjB,KAA2B;AAC1CgC,EAAAA,cAAc,CACTC,aADL,CACmBjC,KAAK,CAACe,OADzB,EAEKmB,IAFL,CAEUC,QAAQ,IAAIV,OAAO,CAACC,GAAR,CAAYS,QAAZ,CAFtB,EAGKC,KAHL,CAGWC,GAAG,IAAIZ,OAAO,CAACa,KAAR,CAAcD,GAAd,CAHlB;AAIH,CALD","sourcesContent":["import ProcessService from '../../services/ProcessService';\r\nimport { processType } from './processType';\r\nimport { EMPTY_PROCESS, INITIAL_STATE } from '../../utils/constants';\r\n\r\nexport function processReducer(state = INITIAL_STATE, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case processType.HANDLE_SAVE:\r\n            handleSave(ProcessService, state);\r\n            break;\r\n        case processType.HANDLE_PROPERTY_CHANGE:\r\n            handlePropertyChange(state, payload);\r\n            break;\r\n        case processType.HANDLE_CONCERNS_CHANGE:\r\n            handleConcernsChange(state, payload);\r\n            break;\r\n        case processType.HANDLE_CONCERNS_ADDITION:\r\n            handleConcernsAddition(state);\r\n            break;\r\n        case processType.ASYNC_LOAD:\r\n            return {\r\n                ...state,\r\n                processList: payload\r\n            };\r\n        case processType.ASYNC_INSERT:\r\n            return {\r\n                ...state,\r\n                process: EMPTY_PROCESS,\r\n                newProcessConcerned: ''\r\n            };\r\n        case processType.SET_DETAILING_OPTIONS:\r\n            return {\r\n                ...state,\r\n                detailingEntry: payload.process,\r\n                showDetailingEntry: payload.flag\r\n            };\r\n        case processType.SET_ENTRY_DIALOG_OPTIONS:\r\n            return {\r\n                ...state,\r\n                showEntryDialog: payload.flag,\r\n                processEntryId: payload.processEntryId,\r\n            };\r\n        case processType.PROCESS_ENTRY_PROPERTY_CHANGE:\r\n            console.log(action, state);\r\n            return {\r\n                ...state,\r\n                processEntry: {\r\n                    ...state.processEntry,\r\n                    [payload.property]: payload.value\r\n                }\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\nconst handleConcernsAddition = (state) => {\r\n    state.process.processConcerns\r\n        .push(state.newProcessConcerned);\r\n}\r\n\r\nconst handleConcernsChange = (state, payload) => {\r\n    state.newProcessConcerned = payload.value;\r\n}\r\n\r\nconst handlePropertyChange = (state, payload) => {\r\n    state.process = {\r\n        ...state.process,\r\n        [payload.property]: payload.value\r\n    };\r\n}\r\n\r\nconst handleSave = (processService, state) => {\r\n    processService\r\n        .createProcess(state.process)\r\n        .then(response => console.log(response))\r\n        .catch(err => console.error(err));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}