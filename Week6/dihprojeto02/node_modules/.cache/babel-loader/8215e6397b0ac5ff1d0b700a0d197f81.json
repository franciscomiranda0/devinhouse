{"ast":null,"code":"import ProcessService from '../../services/ProcessService';\nimport { processType } from './processType';\nimport { EMPTY_PROCESS, INITIAL_STATE } from '../../utils/constants';\nexport function processReducer(state = INITIAL_STATE, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    // case processType.HANDLE_SAVE:\n    //     handleSave(ProcessService, state);\n    //     break;\n    // case processType.HANDLE_PROPERTY_CHANGE:\n    //     handlePropertyChange(state, payload);\n    //     break;\n    // case processType.HANDLE_CONCERNS_CHANGE:\n    //     handleConcernsChange(state, payload);\n    //     break;\n    // case processType.HANDLE_CONCERNS_ADDITION:\n    //     handleConcernsAddition(state);\n    //     break;\n    case processType.ASYNC_LOAD:\n      return { ...state,\n        processList: payload\n      };\n\n    case processType.ASYNC_INSERT:\n      return { ...state,\n        processEntry: EMPTY_PROCESS\n      };\n\n    case processType.ASYNC_UPDATE:\n      return { ...state,\n        processEntry: EMPTY_PROCESS,\n        processEntryId: 0\n      };\n\n    case processType.SET_DETAILING_OPTIONS:\n      return { ...state,\n        detailingEntry: payload.process,\n        showDetailingEntry: payload.flag\n      };\n\n    case processType.SET_ENTRY_DIALOG_OPTIONS:\n      return { ...state,\n        showEntryDialog: payload.flag,\n        processEntryId: payload.processEntryId,\n        processEntry: EMPTY_PROCESS\n      };\n\n    case processType.PROCESS_ENTRY_PROPERTY_CHANGE:\n      return { ...state,\n        processEntry: { ...state.processEntry,\n          [payload.property]: payload.value\n        }\n      };\n\n    case processType.PROCESS_ENTRY_CONCERNS_ADDITION:\n      return { ...state,\n        processEntry: { ...state.processEntry,\n          processConcerns: [...state.processEntry.processConcerns, payload.value]\n        }\n      };\n\n    case processType.LOAD_ONE:\n      return { ...state,\n        processEntry: payload.data\n      };\n  }\n\n  return state;\n} // const handleConcernsAddition = (state) => {\n//     state.process.processConcerns\n//         .push(state.newProcessConcerned);\n// }\n// const handleConcernsChange = (state, payload) => {\n//     state.newProcessConcerned = payload.value;\n// }\n// const handlePropertyChange = (state, payload) => {\n//     state.process = {\n//         ...state.process,\n//         [payload.property]: payload.value\n//     };\n// }\n// const handleSave = (processService, state) => {\n//     processService\n//         .createProcess(state.process)\n//         .then(response => console.log(response))\n//         .catch(err => console.error(err));\n// }","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/redux/process/processReducer.js"],"names":["ProcessService","processType","EMPTY_PROCESS","INITIAL_STATE","processReducer","state","action","type","payload","ASYNC_LOAD","processList","ASYNC_INSERT","processEntry","ASYNC_UPDATE","processEntryId","SET_DETAILING_OPTIONS","detailingEntry","process","showDetailingEntry","flag","SET_ENTRY_DIALOG_OPTIONS","showEntryDialog","PROCESS_ENTRY_PROPERTY_CHANGE","property","value","PROCESS_ENTRY_CONCERNS_ADDITION","processConcerns","LOAD_ONE","data"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,+BAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,uBAA7C;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAK,GAAGF,aAAhC,EAA+CG,MAA/C,EAAuD;AAC1D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAKN,WAAW,CAACQ,UAAjB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHK,QAAAA,WAAW,EAAEF;AAFV,OAAP;;AAIJ,SAAKP,WAAW,CAACU,YAAjB;AACI,aAAO,EACH,GAAGN,KADA;AAEHO,QAAAA,YAAY,EAAEV;AAFX,OAAP;;AAIJ,SAAKD,WAAW,CAACY,YAAjB;AACI,aAAO,EACH,GAAGR,KADA;AAEHO,QAAAA,YAAY,EAAEV,aAFX;AAGHY,QAAAA,cAAc,EAAE;AAHb,OAAP;;AAKJ,SAAKb,WAAW,CAACc,qBAAjB;AACI,aAAO,EACH,GAAGV,KADA;AAEHW,QAAAA,cAAc,EAAER,OAAO,CAACS,OAFrB;AAGHC,QAAAA,kBAAkB,EAAEV,OAAO,CAACW;AAHzB,OAAP;;AAKJ,SAAKlB,WAAW,CAACmB,wBAAjB;AACI,aAAO,EACH,GAAGf,KADA;AAEHgB,QAAAA,eAAe,EAAEb,OAAO,CAACW,IAFtB;AAGHL,QAAAA,cAAc,EAAEN,OAAO,CAACM,cAHrB;AAIHF,QAAAA,YAAY,EAAEV;AAJX,OAAP;;AAMJ,SAAKD,WAAW,CAACqB,6BAAjB;AACI,aAAO,EACH,GAAGjB,KADA;AAEHO,QAAAA,YAAY,EAAE,EACV,GAAGP,KAAK,CAACO,YADC;AAEV,WAACJ,OAAO,CAACe,QAAT,GAAoBf,OAAO,CAACgB;AAFlB;AAFX,OAAP;;AAOJ,SAAKvB,WAAW,CAACwB,+BAAjB;AACI,aAAO,EACH,GAAGpB,KADA;AAEHO,QAAAA,YAAY,EAAE,EACV,GAAGP,KAAK,CAACO,YADC;AAEVc,UAAAA,eAAe,EAAE,CACb,GAAGrB,KAAK,CAACO,YAAN,CAAmBc,eADT,EAEblB,OAAO,CAACgB,KAFK;AAFP;AAFX,OAAP;;AAUJ,SAAKvB,WAAW,CAAC0B,QAAjB;AACI,aAAO,EACH,GAAGtB,KADA;AAEHO,QAAAA,YAAY,EAAEJ,OAAO,CAACoB;AAFnB,OAAP;AA9DR;;AAmEA,SAAOvB,KAAP;AACH,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ProcessService from '../../services/ProcessService';\r\nimport { processType } from './processType';\r\nimport { EMPTY_PROCESS, INITIAL_STATE } from '../../utils/constants';\r\n\r\nexport function processReducer(state = INITIAL_STATE, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        // case processType.HANDLE_SAVE:\r\n        //     handleSave(ProcessService, state);\r\n        //     break;\r\n        // case processType.HANDLE_PROPERTY_CHANGE:\r\n        //     handlePropertyChange(state, payload);\r\n        //     break;\r\n        // case processType.HANDLE_CONCERNS_CHANGE:\r\n        //     handleConcernsChange(state, payload);\r\n        //     break;\r\n        // case processType.HANDLE_CONCERNS_ADDITION:\r\n        //     handleConcernsAddition(state);\r\n        //     break;\r\n        case processType.ASYNC_LOAD:\r\n            return {\r\n                ...state,\r\n                processList: payload\r\n            };\r\n        case processType.ASYNC_INSERT:\r\n            return {\r\n                ...state,\r\n                processEntry: EMPTY_PROCESS,\r\n            };\r\n        case processType.ASYNC_UPDATE:\r\n            return {\r\n                ...state,\r\n                processEntry: EMPTY_PROCESS,\r\n                processEntryId: 0\r\n            };\r\n        case processType.SET_DETAILING_OPTIONS:\r\n            return {\r\n                ...state,\r\n                detailingEntry: payload.process,\r\n                showDetailingEntry: payload.flag\r\n            };\r\n        case processType.SET_ENTRY_DIALOG_OPTIONS:\r\n            return {\r\n                ...state,\r\n                showEntryDialog: payload.flag,\r\n                processEntryId: payload.processEntryId,\r\n                processEntry: EMPTY_PROCESS\r\n            };\r\n        case processType.PROCESS_ENTRY_PROPERTY_CHANGE:\r\n            return {\r\n                ...state,\r\n                processEntry: {\r\n                    ...state.processEntry,\r\n                    [payload.property]: payload.value\r\n                }\r\n            };\r\n        case processType.PROCESS_ENTRY_CONCERNS_ADDITION:\r\n            return {\r\n                ...state,\r\n                processEntry: {\r\n                    ...state.processEntry,\r\n                    processConcerns: [\r\n                        ...state.processEntry.processConcerns,\r\n                        payload.value\r\n                    ]\r\n                }\r\n            }\r\n        case processType.LOAD_ONE:\r\n            return {\r\n                ...state,\r\n                processEntry: payload.data\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\n// const handleConcernsAddition = (state) => {\r\n//     state.process.processConcerns\r\n//         .push(state.newProcessConcerned);\r\n// }\r\n\r\n// const handleConcernsChange = (state, payload) => {\r\n//     state.newProcessConcerned = payload.value;\r\n// }\r\n\r\n// const handlePropertyChange = (state, payload) => {\r\n//     state.process = {\r\n//         ...state.process,\r\n//         [payload.property]: payload.value\r\n//     };\r\n// }\r\n\r\n// const handleSave = (processService, state) => {\r\n//     processService\r\n//         .createProcess(state.process)\r\n//         .then(response => console.log(response))\r\n//         .catch(err => console.error(err));\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}