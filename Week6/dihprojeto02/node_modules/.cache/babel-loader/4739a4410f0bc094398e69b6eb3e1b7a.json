{"ast":null,"code":"import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { processType } from './processType';\nimport ProcessService from '../../services/ProcessService';\n\nfunction* loadProcesses() {\n  const response = yield call(ProcessService.readProcesses);\n  console.log(response);\n  yield put({\n    type: processType.HANDLE_LOAD,\n    payload: response.data\n  });\n}\n\nfunction* watchLoadProcesses() {\n  yield takeEvery(processType.HANDLE_LOAD_SAGA, loadProcesses);\n}\n\nexport default function* rootProcessSaga() {\n  yield all([watchLoadProcesses()]);\n}","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/redux/process/processSaga.js"],"names":["all","call","put","takeEvery","processType","ProcessService","loadProcesses","response","readProcesses","console","log","type","HANDLE_LOAD","payload","data","watchLoadProcesses","HANDLE_LOAD_SAGA","rootProcessSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,UAAUC,aAAV,GAA0B;AACtB,QAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACI,cAAc,CAACG,aAAhB,CAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAML,GAAG,CAAC;AAAES,IAAAA,IAAI,EAAEP,WAAW,CAACQ,WAApB;AAAiCC,IAAAA,OAAO,EAAEN,QAAQ,CAACO;AAAnD,GAAD,CAAT;AACH;;AAED,UAAUC,kBAAV,GAA+B;AAC3B,QAAMZ,SAAS,CAACC,WAAW,CAACY,gBAAb,EAA+BV,aAA/B,CAAf;AACH;;AAED,eAAe,UAAUW,eAAV,GAA4B;AACvC,QAAMjB,GAAG,CAAC,CACNe,kBAAkB,EADZ,CAAD,CAAT;AAGH","sourcesContent":["import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { processType } from './processType';\r\nimport ProcessService from '../../services/ProcessService';\r\n\r\nfunction* loadProcesses() {\r\n    const response = yield call(ProcessService.readProcesses);\r\n    console.log(response);\r\n    yield put({ type: processType.HANDLE_LOAD, payload: response.data })\r\n}\r\n\r\nfunction* watchLoadProcesses() {\r\n    yield takeEvery(processType.HANDLE_LOAD_SAGA, loadProcesses)\r\n}\r\n\r\nexport default function* rootProcessSaga() {\r\n    yield all([\r\n        watchLoadProcesses()\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}