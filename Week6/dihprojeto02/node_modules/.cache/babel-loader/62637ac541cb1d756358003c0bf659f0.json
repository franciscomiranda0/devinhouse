{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Francisco\\\\Documents\\\\Files\\\\DEVinHouse\\\\Week6\\\\dihprojeto02\\\\src\\\\views\\\\EntryView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { asyncInsert, asyncUpdate, handleConcernsAddition, handlePropertyChange, handleConcernsChange } from '../redux/process/processAction';\nimport { getProcess } from '../redux/process/processSelector';\nimport '../styles/EntryView.css';\n\nconst EntryView = () => {\n  _s();\n\n  const process = useSelector(getProcess);\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) return; //TODO dispatch(id)\n  }, [dispatch]);\n  useEffect(() => {\n    console.log('Editando processo: ', process);\n  }, [process]);\n\n  const handleSave = process => {\n    process.id ? dispatch(asyncUpdate(process)) : dispatch(asyncInsert(process));\n    resetForm(document.querySelector('form'));\n  };\n\n  const resetForm = form => form.reset();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'register__root',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'register__form--wrapper',\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: 'title',\n        children: \"Cadastro de processo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: 'register__form',\n        onSubmit: event => {\n          event.preventDefault();\n          handleSave(process);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              htmlFor: 'processSubjectInput',\n              children: \"Assunto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: 'register__form--input',\n              id: 'processSubjectInput',\n              name: 'processSubject',\n              onChange: ({\n                target\n              }) => dispatch(handlePropertyChange(target.name, target.value)),\n              type: 'text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              children: \"Interessados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), process && process.processConcerns && process.processConcerns.length > 0 && process.processConcerns.map((processConcerns, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: processConcerns\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              htmlFor: 'processConcernsInput',\n              children: \"Novo Interessado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: 'register__form--input',\n              id: 'processConcernsInput',\n              name: 'processConcerns',\n              onChange: ({\n                target\n              }) => dispatch(handleConcernsChange(target.name, target.value)),\n              type: 'text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'register__form--button button__label button' // disabled={processConcernment.length == 0}\n              ,\n              id: 'add__button',\n              onClick: event => {\n                console.log(event);\n                event.preventDefault();\n                dispatch(handleConcernsAddition());\n              },\n              children: \"ADICIONAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              htmlFor: 'processDescriptionInput',\n              children: \"Descri\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: 'register__form--input full-width',\n              id: 'processDescriptionInput',\n              name: 'processDescription',\n              onChange: ({\n                target\n              }) => dispatch(handlePropertyChange(target.name, target.value)),\n              type: 'text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--footer',\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'register__form--button button__label',\n            type: 'submit',\n            children: \"SALVAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EntryView, \"1C23uUBEWkhyk1WFFjmKJXXnDR0=\", false, function () {\n  return [useSelector, useDispatch, useParams];\n});\n\n_c = EntryView;\nexport default EntryView; // export default connect(state => ({ process: state.process }))(EntryView);\n// const EMPTY_PROCESS = {\n//     processName: '',\n//     processSubject: '',\n//     processDescription: '',\n//     processConcernment: [],\n// }\n// const Register = props => {\n//     const { id } = useParams();\n//     const [process, setProcess] = useState(EMPTY_PROCESS);\n//     const [processConcernment, setProcessConcernment] = useState('');\n//     useEffect(() => {\n//     }, [process]);\n//     useEffect(() => {\n//     }, [processConcernment]);\n//     const emptyForm = () => {\n//         document.querySelector('form').reset();\n//         setProcess(EMPTY_PROCESS);\n//     }\n//     const handleSave = process => {\n//         ProcessService\n//             .createProcess(process)\n//             .then(() => emptyForm())\n//             .catch(err => console.error(err));\n//     }\n//     const setProcessProperty = (property, value) => {\n//         if (property == 'processConcernment') {\n//             setProcess({ ...process }, process.processConcernment.push(processConcernment));\n//             document.querySelector('#processConcernmentInput').value = '';\n//             setProcessConcernment('');\n//             return;\n//         }\n//         setProcess({ ...process, [property]: value });\n//     }\n//     return (\n//         <div className={'register__root'}>\n//             <div className={'register__form--wrapper'}>\n//                 <h2 className={'title'}>Cadastro de processo</h2>\n//                 <form\n//                     className={'register__form'}\n//                     onSubmit={event => {\n//                         event.preventDefault();\n//                         handleSave(process);\n//                     }}>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}\n//                                 htmlFor={'processSubjectInput'}>\n//                                 Assunto\n//                             </label>\n//                             <input\n//                                 className={'register__form--input'}\n//                                 id={'processSubjectInput'}\n//                                 name={'processSubject'}\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\n//                                 type={'text'} />\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}>\n//                                 Interessados\n//                             </label>\n//                             {\n//                                 process &&\n//                                 process.processConcernment &&\n//                                 process.processConcernment.length > 0 &&\n//                                 process.processConcernment.map((processConcernment, index) =>\n//                                     <span key={index}>{processConcernment}</span>\n//                                 )\n//                             }\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}\n//                                 htmlFor={'processConcernmentInput'}>\n//                                 Novo Interessado\n//                             </label>\n//                             <input\n//                                 className={'register__form--input'}\n//                                 id={'processConcernmentInput'}\n//                                 name={'processConcernment'}\n//                                 onChange={({ target }) => setProcessConcernment(target.value)}\n//                                 type={'text'} />\n//                         </div>\n//                         <div className={'register__form--cell'}>\n//                             <button\n//                                 className={'register__form--button button__label button'}\n//                                 disabled={processConcernment.length == 0}\n//                                 id={'add__button'}\n//                                 onClick={event => {\n//                                     event.preventDefault();\n//                                     setProcessProperty('processConcernment', event.target.value)\n//                                 }}>\n//                                 ADICIONAR\n//                             </button>\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}\n//                                 htmlFor={'processDescriptionInput'}>\n//                                 Descrição\n//                             </label>\n//                             <textarea\n//                                 className={'register__form--input full-width'}\n//                                 id={'processDescriptionInput'}\n//                                 name={'processDescription'}\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\n//                                 type={'text'} />\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--footer'}>\n//                         <button\n//                             className={'register__form--button button__label'}\n//                             type={'submit'}>\n//                             SALVAR\n//                         </button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div >\n//     )\n// }\n// const EMPTY_PROCESS = {\n//     processName: '',\n//     processSubject: '',\n//     processDescription: '',\n//     processConcernment: [],\n// }\n// export default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryView\");","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/views/EntryView.jsx"],"names":["React","useEffect","useSelector","useDispatch","connect","useParams","asyncInsert","asyncUpdate","handleConcernsAddition","handlePropertyChange","handleConcernsChange","getProcess","EntryView","process","dispatch","id","console","log","handleSave","resetForm","document","querySelector","form","reset","event","preventDefault","target","name","value","processConcerns","length","map","index"],"mappings":"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":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport {\r\n    asyncInsert,\r\n    asyncUpdate,\r\n    handleConcernsAddition,\r\n    handlePropertyChange,\r\n    handleConcernsChange,\r\n} from '../redux/process/processAction';\r\nimport { getProcess } from '../redux/process/processSelector';\r\nimport '../styles/EntryView.css';\r\n\r\nconst EntryView = () => {\r\n    const process = useSelector(getProcess);\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (id) return;\r\n        //TODO dispatch(id)\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        console.log('Editando processo: ', process);\r\n    }, [process])\r\n\r\n    const handleSave = process => {\r\n        process.id ?\r\n            dispatch(asyncUpdate(process)) :\r\n            dispatch(asyncInsert(process));\r\n        resetForm(document.querySelector('form'));\r\n    }\r\n\r\n    const resetForm = form => form.reset();\r\n\r\n    return (\r\n        <div className={'register__root'}>\r\n            <div className={'register__form--wrapper'}>\r\n                <h2 className={'title'}>Cadastro de processo</h2>\r\n                <form\r\n                    className={'register__form'}\r\n                    onSubmit={event => {\r\n                        event.preventDefault();\r\n                        handleSave(process);\r\n                    }}>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}\r\n                                htmlFor={'processSubjectInput'}>\r\n                                Assunto\r\n                            </label>\r\n                            <input\r\n                                className={'register__form--input'}\r\n                                id={'processSubjectInput'}\r\n                                name={'processSubject'}\r\n                                onChange={({ target }) => dispatch(handlePropertyChange(target.name, target.value))}\r\n                                type={'text'} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}>\r\n                                Interessados\r\n                            </label>\r\n                            {\r\n                                process &&\r\n                                process.processConcerns &&\r\n                                process.processConcerns.length > 0 &&\r\n                                process.processConcerns.map((processConcerns, index) =>\r\n                                    <span key={index}>{processConcerns}</span>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}\r\n                                htmlFor={'processConcernsInput'}>\r\n                                Novo Interessado\r\n                            </label>\r\n                            <input\r\n                                className={'register__form--input'}\r\n                                id={'processConcernsInput'}\r\n                                name={'processConcerns'}\r\n                                onChange={({ target }) => dispatch(handleConcernsChange(target.name, target.value))}\r\n                                type={'text'} />\r\n                        </div>\r\n                        <div className={'register__form--cell'}>\r\n                            <button\r\n                                className={'register__form--button button__label button'}\r\n                                // disabled={processConcernment.length == 0}\r\n                                id={'add__button'}\r\n                                onClick={event => {\r\n                                    console.log(event);\r\n                                    event.preventDefault();\r\n                                    dispatch(handleConcernsAddition());\r\n                                }}>\r\n                                ADICIONAR\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}\r\n                                htmlFor={'processDescriptionInput'}>\r\n                                Descrição\r\n                            </label>\r\n                            <textarea\r\n                                className={'register__form--input full-width'}\r\n                                id={'processDescriptionInput'}\r\n                                name={'processDescription'}\r\n                                onChange={({ target }) => dispatch(handlePropertyChange(target.name, target.value))}\r\n                                type={'text'} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--footer'}>\r\n                        <button\r\n                            className={'register__form--button button__label'}\r\n                            type={'submit'}>\r\n                            SALVAR\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default EntryView;\r\n// export default connect(state => ({ process: state.process }))(EntryView);\r\n\r\n// const EMPTY_PROCESS = {\r\n//     processName: '',\r\n//     processSubject: '',\r\n//     processDescription: '',\r\n//     processConcernment: [],\r\n// }\r\n// const Register = props => {\r\n//     const { id } = useParams();\r\n//     const [process, setProcess] = useState(EMPTY_PROCESS);\r\n//     const [processConcernment, setProcessConcernment] = useState('');\r\n\r\n//     useEffect(() => {\r\n//     }, [process]);\r\n\r\n//     useEffect(() => {\r\n//     }, [processConcernment]);\r\n\r\n//     const emptyForm = () => {\r\n//         document.querySelector('form').reset();\r\n//         setProcess(EMPTY_PROCESS);\r\n//     }\r\n\r\n//     const handleSave = process => {\r\n//         ProcessService\r\n//             .createProcess(process)\r\n//             .then(() => emptyForm())\r\n//             .catch(err => console.error(err));\r\n//     }\r\n\r\n//     const setProcessProperty = (property, value) => {\r\n//         if (property == 'processConcernment') {\r\n//             setProcess({ ...process }, process.processConcernment.push(processConcernment));\r\n//             document.querySelector('#processConcernmentInput').value = '';\r\n//             setProcessConcernment('');\r\n//             return;\r\n//         }\r\n//         setProcess({ ...process, [property]: value });\r\n//     }\r\n\r\n//     return (\r\n//         <div className={'register__root'}>\r\n//             <div className={'register__form--wrapper'}>\r\n//                 <h2 className={'title'}>Cadastro de processo</h2>\r\n//                 <form\r\n//                     className={'register__form'}\r\n//                     onSubmit={event => {\r\n//                         event.preventDefault();\r\n//                         handleSave(process);\r\n//                     }}>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}\r\n//                                 htmlFor={'processSubjectInput'}>\r\n//                                 Assunto\r\n//                             </label>\r\n//                             <input\r\n//                                 className={'register__form--input'}\r\n//                                 id={'processSubjectInput'}\r\n//                                 name={'processSubject'}\r\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\r\n//                                 type={'text'} />\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}>\r\n//                                 Interessados\r\n//                             </label>\r\n//                             {\r\n//                                 process &&\r\n//                                 process.processConcernment &&\r\n//                                 process.processConcernment.length > 0 &&\r\n//                                 process.processConcernment.map((processConcernment, index) =>\r\n//                                     <span key={index}>{processConcernment}</span>\r\n//                                 )\r\n//                             }\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}\r\n//                                 htmlFor={'processConcernmentInput'}>\r\n//                                 Novo Interessado\r\n//                             </label>\r\n//                             <input\r\n//                                 className={'register__form--input'}\r\n//                                 id={'processConcernmentInput'}\r\n//                                 name={'processConcernment'}\r\n//                                 onChange={({ target }) => setProcessConcernment(target.value)}\r\n//                                 type={'text'} />\r\n//                         </div>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <button\r\n//                                 className={'register__form--button button__label button'}\r\n//                                 disabled={processConcernment.length == 0}\r\n//                                 id={'add__button'}\r\n//                                 onClick={event => {\r\n//                                     event.preventDefault();\r\n//                                     setProcessProperty('processConcernment', event.target.value)\r\n//                                 }}>\r\n//                                 ADICIONAR\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}\r\n//                                 htmlFor={'processDescriptionInput'}>\r\n//                                 Descrição\r\n//                             </label>\r\n//                             <textarea\r\n//                                 className={'register__form--input full-width'}\r\n//                                 id={'processDescriptionInput'}\r\n//                                 name={'processDescription'}\r\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\r\n//                                 type={'text'} />\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--footer'}>\r\n//                         <button\r\n//                             className={'register__form--button button__label'}\r\n//                             type={'submit'}>\r\n//                             SALVAR\r\n//                         </button>\r\n//                     </div>\r\n//                 </form>\r\n//             </div>\r\n//         </div >\r\n//     )\r\n// }\r\n\r\n// const EMPTY_PROCESS = {\r\n//     processName: '',\r\n//     processSubject: '',\r\n//     processDescription: '',\r\n//     processConcernment: [],\r\n// }\r\n// export default Register;\r\n"]},"metadata":{},"sourceType":"module"}