{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Francisco\\\\Documents\\\\Files\\\\DEVinHouse\\\\Week6\\\\dihprojeto02\\\\src\\\\pages\\\\Register.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Process from '../models/Process';\nimport '../styles/Register.css';\nimport { getName } from '../utils/ProcessNaming';\nimport ProcessService from '../services/ProcessService';\nimport { handleSave, handlePropertyChange, handleConcernsChange, handleConcernsAddition } from '../redux/action/ProcessActions';\n\nconst Register = ({\n  process,\n  dispatch\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'register__root',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'register__form--wrapper',\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: 'title',\n        children: \"Cadastro de processo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: 'register__form',\n        onSubmit: event => {\n          event.preventDefault();\n          console.log(event); // dispatch(() => { handleSave() })\n          // handleSave(processRegisteringData);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              htmlFor: 'processSubjectInput',\n              children: \"Assunto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: 'register__form--input',\n              id: 'processSubjectInput',\n              name: 'processSubject',\n              onChange: ({\n                target\n              }) => dispatch(handlePropertyChange(target.name, target.value)),\n              type: 'text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              children: \"Interessados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), process && process.processConcerns && process.processConcerns.length > 0 && process.processConcerns.map((processConcerns, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: processConcerns\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              htmlFor: 'processConcernsInput',\n              children: \"Novo Interessado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: 'register__form--input',\n              id: 'processConcernsInput',\n              name: 'processConcerns',\n              onChange: ({\n                target\n              }) => dispatch(handleConcernsChange(target.name, target.value)),\n              type: 'text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'register__form--button button__label button' // disabled={processConcernment.length == 0}\n              ,\n              id: 'add__button',\n              onClick: event => {\n                console.log(event);\n                event.preventDefault();\n                dispatch(handleConcernsAddition());\n              },\n              children: \"ADICIONAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--row',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'register__form--cell',\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: 'register__form--label',\n              htmlFor: 'processDescriptionInput',\n              children: \"Descri\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: 'register__form--input full-width',\n              id: 'processDescriptionInput',\n              name: 'processDescription',\n              onChange: ({\n                target\n              }) => dispatch(handlePropertyChange(target.name, target.value)),\n              type: 'text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'register__form--footer',\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'register__form--button button__label',\n            type: 'submit',\n            children: \"SALVAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Register;\nexport default connect(state => ({\n  process: state.process\n}))(Register); // const EMPTY_PROCESS = {\n//     processName: '',\n//     processSubject: '',\n//     processDescription: '',\n//     processConcernment: [],\n// }\n// const Register = props => {\n//     const { id } = useParams();\n//     const [process, setProcess] = useState(EMPTY_PROCESS);\n//     const [processConcernment, setProcessConcernment] = useState('');\n//     useEffect(() => {\n//     }, [process]);\n//     useEffect(() => {\n//     }, [processConcernment]);\n//     const emptyForm = () => {\n//         document.querySelector('form').reset();\n//         setProcess(EMPTY_PROCESS);\n//     }\n//     const handleSave = process => {\n//         ProcessService\n//             .createProcess(process)\n//             .then(() => emptyForm())\n//             .catch(err => console.error(err));\n//     }\n//     const setProcessProperty = (property, value) => {\n//         if (property == 'processConcernment') {\n//             setProcess({ ...process }, process.processConcernment.push(processConcernment));\n//             document.querySelector('#processConcernmentInput').value = '';\n//             setProcessConcernment('');\n//             return;\n//         }\n//         setProcess({ ...process, [property]: value });\n//     }\n//     return (\n//         <div className={'register__root'}>\n//             <div className={'register__form--wrapper'}>\n//                 <h2 className={'title'}>Cadastro de processo</h2>\n//                 <form\n//                     className={'register__form'}\n//                     onSubmit={event => {\n//                         event.preventDefault();\n//                         handleSave(process);\n//                     }}>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}\n//                                 htmlFor={'processSubjectInput'}>\n//                                 Assunto\n//                             </label>\n//                             <input\n//                                 className={'register__form--input'}\n//                                 id={'processSubjectInput'}\n//                                 name={'processSubject'}\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\n//                                 type={'text'} />\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}>\n//                                 Interessados\n//                             </label>\n//                             {\n//                                 process &&\n//                                 process.processConcernment &&\n//                                 process.processConcernment.length > 0 &&\n//                                 process.processConcernment.map((processConcernment, index) =>\n//                                     <span key={index}>{processConcernment}</span>\n//                                 )\n//                             }\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}\n//                                 htmlFor={'processConcernmentInput'}>\n//                                 Novo Interessado\n//                             </label>\n//                             <input\n//                                 className={'register__form--input'}\n//                                 id={'processConcernmentInput'}\n//                                 name={'processConcernment'}\n//                                 onChange={({ target }) => setProcessConcernment(target.value)}\n//                                 type={'text'} />\n//                         </div>\n//                         <div className={'register__form--cell'}>\n//                             <button\n//                                 className={'register__form--button button__label button'}\n//                                 disabled={processConcernment.length == 0}\n//                                 id={'add__button'}\n//                                 onClick={event => {\n//                                     event.preventDefault();\n//                                     setProcessProperty('processConcernment', event.target.value)\n//                                 }}>\n//                                 ADICIONAR\n//                             </button>\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--row'}>\n//                         <div className={'register__form--cell'}>\n//                             <label\n//                                 className={'register__form--label'}\n//                                 htmlFor={'processDescriptionInput'}>\n//                                 Descrição\n//                             </label>\n//                             <textarea\n//                                 className={'register__form--input full-width'}\n//                                 id={'processDescriptionInput'}\n//                                 name={'processDescription'}\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\n//                                 type={'text'} />\n//                         </div>\n//                     </div>\n//                     <div className={'register__form--footer'}>\n//                         <button\n//                             className={'register__form--button button__label'}\n//                             type={'submit'}>\n//                             SALVAR\n//                         </button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div >\n//     )\n// }\n// const EMPTY_PROCESS = {\n//     processName: '',\n//     processSubject: '',\n//     processDescription: '',\n//     processConcernment: [],\n// }\n// export default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/pages/Register.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","connect","useParams","Process","getName","ProcessService","handleSave","handlePropertyChange","handleConcernsChange","handleConcernsAddition","Register","process","dispatch","event","preventDefault","console","log","target","name","value","processConcerns","length","map","index","state"],"mappings":"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":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch, connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport Process from '../models/Process';\r\nimport '../styles/Register.css';\r\nimport { getName } from '../utils/ProcessNaming';\r\nimport ProcessService from '../services/ProcessService';\r\nimport { handleSave, handlePropertyChange, handleConcernsChange, handleConcernsAddition } from '../redux/action/ProcessActions';\r\n\r\nconst Register = ({ process, dispatch }) => {\r\n    return (\r\n        <div className={'register__root'}>\r\n            <div className={'register__form--wrapper'}>\r\n                <h2 className={'title'}>Cadastro de processo</h2>\r\n                <form\r\n                    className={'register__form'}\r\n                    onSubmit={event => {\r\n                        event.preventDefault();\r\n                        console.log(event);\r\n                        // dispatch(() => { handleSave() })\r\n                        // handleSave(processRegisteringData);\r\n                    }}>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}\r\n                                htmlFor={'processSubjectInput'}>\r\n                                Assunto\r\n                            </label>\r\n                            <input\r\n                                className={'register__form--input'}\r\n                                id={'processSubjectInput'}\r\n                                name={'processSubject'}\r\n                                onChange={({ target }) => dispatch(handlePropertyChange(target.name, target.value))}\r\n                                type={'text'} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}>\r\n                                Interessados\r\n                            </label>\r\n                            {\r\n                                process &&\r\n                                process.processConcerns &&\r\n                                process.processConcerns.length > 0 &&\r\n                                process.processConcerns.map((processConcerns, index) =>\r\n                                    <span key={index}>{processConcerns}</span>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}\r\n                                htmlFor={'processConcernsInput'}>\r\n                                Novo Interessado\r\n                            </label>\r\n                            <input\r\n                                className={'register__form--input'}\r\n                                id={'processConcernsInput'}\r\n                                name={'processConcerns'}\r\n                                onChange={({ target }) => dispatch(handleConcernsChange(target.name, target.value))}\r\n                                type={'text'} />\r\n                        </div>\r\n                        <div className={'register__form--cell'}>\r\n                            <button\r\n                                className={'register__form--button button__label button'}\r\n                                // disabled={processConcernment.length == 0}\r\n                                id={'add__button'}\r\n                                onClick={event => {\r\n                                    console.log(event);\r\n                                    event.preventDefault();\r\n                                    dispatch(handleConcernsAddition());\r\n                                }}>\r\n                                ADICIONAR\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--row'}>\r\n                        <div className={'register__form--cell'}>\r\n                            <label\r\n                                className={'register__form--label'}\r\n                                htmlFor={'processDescriptionInput'}>\r\n                                Descrição\r\n                            </label>\r\n                            <textarea\r\n                                className={'register__form--input full-width'}\r\n                                id={'processDescriptionInput'}\r\n                                name={'processDescription'}\r\n                                onChange={({ target }) => dispatch(handlePropertyChange(target.name, target.value))}\r\n                                type={'text'} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={'register__form--footer'}>\r\n                        <button\r\n                            className={'register__form--button button__label'}\r\n                            type={'submit'}>\r\n                            SALVAR\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default connect(state => ({ process: state.process }))(Register);\r\n\r\n// const EMPTY_PROCESS = {\r\n//     processName: '',\r\n//     processSubject: '',\r\n//     processDescription: '',\r\n//     processConcernment: [],\r\n// }\r\n// const Register = props => {\r\n//     const { id } = useParams();\r\n//     const [process, setProcess] = useState(EMPTY_PROCESS);\r\n//     const [processConcernment, setProcessConcernment] = useState('');\r\n\r\n//     useEffect(() => {\r\n//     }, [process]);\r\n\r\n//     useEffect(() => {\r\n//     }, [processConcernment]);\r\n\r\n//     const emptyForm = () => {\r\n//         document.querySelector('form').reset();\r\n//         setProcess(EMPTY_PROCESS);\r\n//     }\r\n\r\n//     const handleSave = process => {\r\n//         ProcessService\r\n//             .createProcess(process)\r\n//             .then(() => emptyForm())\r\n//             .catch(err => console.error(err));\r\n//     }\r\n\r\n//     const setProcessProperty = (property, value) => {\r\n//         if (property == 'processConcernment') {\r\n//             setProcess({ ...process }, process.processConcernment.push(processConcernment));\r\n//             document.querySelector('#processConcernmentInput').value = '';\r\n//             setProcessConcernment('');\r\n//             return;\r\n//         }\r\n//         setProcess({ ...process, [property]: value });\r\n//     }\r\n\r\n//     return (\r\n//         <div className={'register__root'}>\r\n//             <div className={'register__form--wrapper'}>\r\n//                 <h2 className={'title'}>Cadastro de processo</h2>\r\n//                 <form\r\n//                     className={'register__form'}\r\n//                     onSubmit={event => {\r\n//                         event.preventDefault();\r\n//                         handleSave(process);\r\n//                     }}>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}\r\n//                                 htmlFor={'processSubjectInput'}>\r\n//                                 Assunto\r\n//                             </label>\r\n//                             <input\r\n//                                 className={'register__form--input'}\r\n//                                 id={'processSubjectInput'}\r\n//                                 name={'processSubject'}\r\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\r\n//                                 type={'text'} />\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}>\r\n//                                 Interessados\r\n//                             </label>\r\n//                             {\r\n//                                 process &&\r\n//                                 process.processConcernment &&\r\n//                                 process.processConcernment.length > 0 &&\r\n//                                 process.processConcernment.map((processConcernment, index) =>\r\n//                                     <span key={index}>{processConcernment}</span>\r\n//                                 )\r\n//                             }\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}\r\n//                                 htmlFor={'processConcernmentInput'}>\r\n//                                 Novo Interessado\r\n//                             </label>\r\n//                             <input\r\n//                                 className={'register__form--input'}\r\n//                                 id={'processConcernmentInput'}\r\n//                                 name={'processConcernment'}\r\n//                                 onChange={({ target }) => setProcessConcernment(target.value)}\r\n//                                 type={'text'} />\r\n//                         </div>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <button\r\n//                                 className={'register__form--button button__label button'}\r\n//                                 disabled={processConcernment.length == 0}\r\n//                                 id={'add__button'}\r\n//                                 onClick={event => {\r\n//                                     event.preventDefault();\r\n//                                     setProcessProperty('processConcernment', event.target.value)\r\n//                                 }}>\r\n//                                 ADICIONAR\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--row'}>\r\n//                         <div className={'register__form--cell'}>\r\n//                             <label\r\n//                                 className={'register__form--label'}\r\n//                                 htmlFor={'processDescriptionInput'}>\r\n//                                 Descrição\r\n//                             </label>\r\n//                             <textarea\r\n//                                 className={'register__form--input full-width'}\r\n//                                 id={'processDescriptionInput'}\r\n//                                 name={'processDescription'}\r\n//                                 onChange={({ target }) => setProcessProperty(target.name, target.value)}\r\n//                                 type={'text'} />\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className={'register__form--footer'}>\r\n//                         <button\r\n//                             className={'register__form--button button__label'}\r\n//                             type={'submit'}>\r\n//                             SALVAR\r\n//                         </button>\r\n//                     </div>\r\n//                 </form>\r\n//             </div>\r\n//         </div >\r\n//     )\r\n// }\r\n\r\n// const EMPTY_PROCESS = {\r\n//     processName: '',\r\n//     processSubject: '',\r\n//     processDescription: '',\r\n//     processConcernment: [],\r\n// }\r\n// export default Register;\r\n"]},"metadata":{},"sourceType":"module"}