{"ast":null,"code":"import ProcessService from '../../services/ProcessService';\nimport { processType } from '../type/processType';\nconst EMPTY_PROCESS = {\n  processName: '',\n  processSubject: '',\n  processDescription: '',\n  processConcerns: []\n};\nconst INITIAL_STATE = {\n  process: EMPTY_PROCESS,\n  processList: []\n};\nexport function processReducer(state = INITIAL_STATE, action) {\n  console.log('processRed', state, action);\n  const {\n    type,\n    payload\n  } = action;\n  const {\n    process\n  } = state;\n\n  switch (type) {\n    case processType.HANDLE_SAVE:\n      ProcessService.createProcess(payload.process).then(response => console.log(response)).catch(err => console.error(err));\n      break;\n\n    case processType.HANDLE_PROPERTY_CHANGE:\n      payload.property == 'processConcerns' ? console.log('been here') : process = { ...process,\n        [payload.property]: payload.value\n      };\n    // state.process = {\n    //     ...state.process,\n    // }\n    // if (property == 'processConcerns') {\n    //     setProcess({ ...process }, process.processConcerns.push(processConcerns));\n    //     document.querySelector('#processConcernsInput').value = '';\n    //     setProcessConcernment('');\n    //     return;\n    // }\n    // setProcess({ ...process, [property]: value });\n  }\n\n  return state;\n} // const setProcessProperty()","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/redux/reducer/ProcessReducer.js"],"names":["ProcessService","processType","EMPTY_PROCESS","processName","processSubject","processDescription","processConcerns","INITIAL_STATE","process","processList","processReducer","state","action","console","log","type","payload","HANDLE_SAVE","createProcess","then","response","catch","err","error","HANDLE_PROPERTY_CHANGE","property","value"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,+BAA3B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,EADK;AAElBC,EAAAA,cAAc,EAAE,EAFE;AAGlBC,EAAAA,kBAAkB,EAAE,EAHF;AAIlBC,EAAAA,eAAe,EAAE;AAJC,CAAtB;AAOA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAEN,aADS;AAElBO,EAAAA,WAAW,EAAE;AAFK,CAAtB;AAKA,OAAO,SAASC,cAAT,CAAwBC,KAAK,GAAGJ,aAAhC,EAA+CK,MAA/C,EAAuD;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,KAA1B,EAAiCC,MAAjC;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,MAA1B;AACA,QAAM;AAAEJ,IAAAA;AAAF,MAAcG,KAApB;;AACA,UAAQI,IAAR;AACI,SAAKd,WAAW,CAACgB,WAAjB;AACIjB,MAAAA,cAAc,CACTkB,aADL,CACmBF,OAAO,CAACR,OAD3B,EAEKW,IAFL,CAEUC,QAAQ,IAAIP,OAAO,CAACC,GAAR,CAAYM,QAAZ,CAFtB,EAGKC,KAHL,CAGWC,GAAG,IAAIT,OAAO,CAACU,KAAR,CAAcD,GAAd,CAHlB;AAIA;;AACJ,SAAKrB,WAAW,CAACuB,sBAAjB;AACIR,MAAAA,OAAO,CAACS,QAAR,IAAoB,iBAApB,GACIZ,OAAO,CAACC,GAAR,CAAY,WAAZ,CADJ,GAEIN,OAAO,GAAG,EACN,GAAGA,OADG;AAEN,SAACQ,OAAO,CAACS,QAAT,GAAoBT,OAAO,CAACU;AAFtB,OAFd;AAMJ;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBJ;;AA2BA,SAAOf,KAAP;AACH,C,CAED","sourcesContent":["import ProcessService from '../../services/ProcessService';\r\nimport { processType } from '../type/processType';\r\n\r\nconst EMPTY_PROCESS = {\r\n    processName: '',\r\n    processSubject: '',\r\n    processDescription: '',\r\n    processConcerns: [],\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    process: EMPTY_PROCESS,\r\n    processList: []\r\n}\r\n\r\nexport function processReducer(state = INITIAL_STATE, action) {\r\n    console.log('processRed', state, action);\r\n    const { type, payload } = action;\r\n    const { process } = state;\r\n    switch (type) {\r\n        case processType.HANDLE_SAVE:\r\n            ProcessService\r\n                .createProcess(payload.process)\r\n                .then(response => console.log(response))\r\n                .catch(err => console.error(err));\r\n            break;\r\n        case processType.HANDLE_PROPERTY_CHANGE:\r\n            payload.property == 'processConcerns' ?\r\n                console.log('been here') :\r\n                process = {\r\n                    ...process,\r\n                    [payload.property]: payload.value\r\n                }\r\n        // state.process = {\r\n        //     ...state.process,\r\n\r\n        // }\r\n\r\n        // if (property == 'processConcerns') {\r\n        //     setProcess({ ...process }, process.processConcerns.push(processConcerns));\r\n        //     document.querySelector('#processConcernsInput').value = '';\r\n        //     setProcessConcernment('');\r\n        //     return;\r\n        // }\r\n        // setProcess({ ...process, [property]: value });\r\n    }\r\n    return state;\r\n}\r\n\r\n// const setProcessProperty()"]},"metadata":{},"sourceType":"module"}