{"ast":null,"code":"import axios from 'axios';\nimport { PROCESS_API } from './API';\n\nclass ProcessService {\n  createProcess(process) {\n    return axios.post(PROCESS_API, process).then(response => response).catch(err => {\n      throw err;\n    });\n  }\n\n  readProcesses() {\n    return axios.get(PROCESS_API).then(response => response).catch(err => {\n      throw err;\n    });\n  }\n\n  updateProcess(process) {\n    return axios.put(PROCESS_API, process).then(response => response).catch(err => {\n      throw err;\n    });\n  }\n\n  deleteProcess(id) {}\n\n}\n\nexport default new ProcessService();","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/services/ProcessService.js"],"names":["axios","PROCESS_API","ProcessService","createProcess","process","post","then","response","catch","err","readProcesses","get","updateProcess","put","deleteProcess","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACnB,WAAOJ,KAAK,CAACK,IAAN,CAAWJ,WAAX,EAAwBG,OAAxB,EACFE,IADE,CACGC,QAAQ,IAAIA,QADf,EAEFC,KAFE,CAEIC,GAAG,IAAI;AAAE,YAAMA,GAAN;AAAW,KAFxB,CAAP;AAGH;;AACDC,EAAAA,aAAa,GAAG;AACZ,WAAOV,KAAK,CAACW,GAAN,CAAUV,WAAV,EACFK,IADE,CACGC,QAAQ,IAAIA,QADf,EAEFC,KAFE,CAEIC,GAAG,IAAI;AAAE,YAAMA,GAAN;AAAW,KAFxB,CAAP;AAGH;;AACDG,EAAAA,aAAa,CAACR,OAAD,EAAU;AACnB,WAAOJ,KAAK,CAACa,GAAN,CAAUZ,WAAV,EAAuBG,OAAvB,EACFE,IADE,CACGC,QAAQ,IAAIA,QADf,EAEFC,KAFE,CAEIC,GAAG,IAAI;AAAE,YAAMA,GAAN;AAAW,KAFxB,CAAP;AAGH;;AACDK,EAAAA,aAAa,CAACC,EAAD,EAAK,CAAG;;AAhBJ;;AAoBrB,eAAe,IAAIb,cAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport { PROCESS_API } from './API';\r\n\r\nclass ProcessService {\r\n    createProcess(process) {\r\n        return axios.post(PROCESS_API, process)\r\n            .then(response => response)\r\n            .catch(err => { throw err });\r\n    }\r\n    readProcesses() {\r\n        return axios.get(PROCESS_API)\r\n            .then(response => response)\r\n            .catch(err => { throw err });\r\n    }\r\n    updateProcess(process) {\r\n        return axios.put(PROCESS_API, process)\r\n            .then(response => response)\r\n            .catch(err => { throw err });\r\n    }\r\n    deleteProcess(id) { }\r\n\r\n}\r\n\r\nexport default new ProcessService();"]},"metadata":{},"sourceType":"module"}