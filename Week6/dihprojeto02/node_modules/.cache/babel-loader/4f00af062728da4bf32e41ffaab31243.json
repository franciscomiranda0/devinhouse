{"ast":null,"code":"import ProcessService from '../../services/ProcessService';\nimport { processType } from './processType';\nimport { EMPTY_PROCESS, INITIAL_STATE } from '../../utils/constants';\nexport function processReducer(state = INITIAL_STATE, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case processType.HANDLE_SAVE:\n      handleSave(ProcessService, state);\n      break;\n\n    case processType.HANDLE_PROPERTY_CHANGE:\n      handlePropertyChange(state, payload);\n      break;\n\n    case processType.HANDLE_CONCERNS_CHANGE:\n      handleConcernsChange(state, payload);\n      break;\n\n    case processType.HANDLE_CONCERNS_ADDITION:\n      handleConcernsAddition(state);\n      break;\n\n    case processType.ASYNC_LOAD:\n      return { ...state,\n        processList: payload\n      };\n\n    case processType.ASYNC_INSERT:\n      return { ...state,\n        processEntry: EMPTY_PROCESS\n      };\n\n    case processType.ASYNC_UPDATE:\n      return { ...state,\n        processEntry: EMPTY_PROCESS,\n        processEntryId: 0\n      };\n\n    case processType.SET_DETAILING_OPTIONS:\n      return { ...state,\n        detailingEntry: payload.process,\n        showDetailingEntry: payload.flag\n      };\n\n    case processType.SET_ENTRY_DIALOG_OPTIONS:\n      return { ...state,\n        showEntryDialog: payload.flag,\n        processEntryId: payload.processEntryId\n      };\n\n    case processType.PROCESS_ENTRY_PROPERTY_CHANGE:\n      return { ...state,\n        processEntry: { ...state.processEntry,\n          [payload.property]: payload.value\n        }\n      };\n\n    case processType.PROCESS_ENTRY_CONCERNS_ADDITION:\n      return { ...state,\n        processEntry: { ...state.processEntry,\n          processConcerns: [...state.processEntry.processConcerns, payload.value]\n        }\n      };\n\n    case processType.LOAD_ONE:\n      console.log(state, action);\n      return { ...state,\n        processEntry: payload.data\n      };\n  }\n\n  return state;\n}\n\nconst handleConcernsAddition = state => {\n  state.process.processConcerns.push(state.newProcessConcerned);\n};\n\nconst handleConcernsChange = (state, payload) => {\n  state.newProcessConcerned = payload.value;\n};\n\nconst handlePropertyChange = (state, payload) => {\n  state.process = { ...state.process,\n    [payload.property]: payload.value\n  };\n};\n\nconst handleSave = (processService, state) => {\n  processService.createProcess(state.process).then(response => console.log(response)).catch(err => console.error(err));\n};","map":{"version":3,"sources":["C:/Users/Francisco/Documents/Files/DEVinHouse/Week6/dihprojeto02/src/redux/process/processReducer.js"],"names":["ProcessService","processType","EMPTY_PROCESS","INITIAL_STATE","processReducer","state","action","type","payload","HANDLE_SAVE","handleSave","HANDLE_PROPERTY_CHANGE","handlePropertyChange","HANDLE_CONCERNS_CHANGE","handleConcernsChange","HANDLE_CONCERNS_ADDITION","handleConcernsAddition","ASYNC_LOAD","processList","ASYNC_INSERT","processEntry","ASYNC_UPDATE","processEntryId","SET_DETAILING_OPTIONS","detailingEntry","process","showDetailingEntry","flag","SET_ENTRY_DIALOG_OPTIONS","showEntryDialog","PROCESS_ENTRY_PROPERTY_CHANGE","property","value","PROCESS_ENTRY_CONCERNS_ADDITION","processConcerns","LOAD_ONE","console","log","data","push","newProcessConcerned","processService","createProcess","then","response","catch","err","error"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,+BAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,uBAA7C;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAK,GAAGF,aAAhC,EAA+CG,MAA/C,EAAuD;AAC1D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACI,SAAKN,WAAW,CAACQ,WAAjB;AACIC,MAAAA,UAAU,CAACV,cAAD,EAAiBK,KAAjB,CAAV;AACA;;AACJ,SAAKJ,WAAW,CAACU,sBAAjB;AACIC,MAAAA,oBAAoB,CAACP,KAAD,EAAQG,OAAR,CAApB;AACA;;AACJ,SAAKP,WAAW,CAACY,sBAAjB;AACIC,MAAAA,oBAAoB,CAACT,KAAD,EAAQG,OAAR,CAApB;AACA;;AACJ,SAAKP,WAAW,CAACc,wBAAjB;AACIC,MAAAA,sBAAsB,CAACX,KAAD,CAAtB;AACA;;AACJ,SAAKJ,WAAW,CAACgB,UAAjB;AACI,aAAO,EACH,GAAGZ,KADA;AAEHa,QAAAA,WAAW,EAAEV;AAFV,OAAP;;AAIJ,SAAKP,WAAW,CAACkB,YAAjB;AACI,aAAO,EACH,GAAGd,KADA;AAEHe,QAAAA,YAAY,EAAElB;AAFX,OAAP;;AAIJ,SAAKD,WAAW,CAACoB,YAAjB;AACI,aAAO,EACH,GAAGhB,KADA;AAEHe,QAAAA,YAAY,EAAElB,aAFX;AAGHoB,QAAAA,cAAc,EAAE;AAHb,OAAP;;AAKJ,SAAKrB,WAAW,CAACsB,qBAAjB;AACI,aAAO,EACH,GAAGlB,KADA;AAEHmB,QAAAA,cAAc,EAAEhB,OAAO,CAACiB,OAFrB;AAGHC,QAAAA,kBAAkB,EAAElB,OAAO,CAACmB;AAHzB,OAAP;;AAKJ,SAAK1B,WAAW,CAAC2B,wBAAjB;AACI,aAAO,EACH,GAAGvB,KADA;AAEHwB,QAAAA,eAAe,EAAErB,OAAO,CAACmB,IAFtB;AAGHL,QAAAA,cAAc,EAAEd,OAAO,CAACc;AAHrB,OAAP;;AAKJ,SAAKrB,WAAW,CAAC6B,6BAAjB;AACI,aAAO,EACH,GAAGzB,KADA;AAEHe,QAAAA,YAAY,EAAE,EACV,GAAGf,KAAK,CAACe,YADC;AAEV,WAACZ,OAAO,CAACuB,QAAT,GAAoBvB,OAAO,CAACwB;AAFlB;AAFX,OAAP;;AAOJ,SAAK/B,WAAW,CAACgC,+BAAjB;AACI,aAAO,EACH,GAAG5B,KADA;AAEHe,QAAAA,YAAY,EAAE,EACV,GAAGf,KAAK,CAACe,YADC;AAEVc,UAAAA,eAAe,EAAE,CACb,GAAG7B,KAAK,CAACe,YAAN,CAAmBc,eADT,EAEb1B,OAAO,CAACwB,KAFK;AAFP;AAFX,OAAP;;AAUJ,SAAK/B,WAAW,CAACkC,QAAjB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYhC,KAAZ,EAAmBC,MAAnB;AACA,aAAO,EACH,GAAGD,KADA;AAEHe,QAAAA,YAAY,EAAEZ,OAAO,CAAC8B;AAFnB,OAAP;AA9DR;;AAmEA,SAAOjC,KAAP;AACH;;AAED,MAAMW,sBAAsB,GAAIX,KAAD,IAAW;AACtCA,EAAAA,KAAK,CAACoB,OAAN,CAAcS,eAAd,CACKK,IADL,CACUlC,KAAK,CAACmC,mBADhB;AAEH,CAHD;;AAKA,MAAM1B,oBAAoB,GAAG,CAACT,KAAD,EAAQG,OAAR,KAAoB;AAC7CH,EAAAA,KAAK,CAACmC,mBAAN,GAA4BhC,OAAO,CAACwB,KAApC;AACH,CAFD;;AAIA,MAAMpB,oBAAoB,GAAG,CAACP,KAAD,EAAQG,OAAR,KAAoB;AAC7CH,EAAAA,KAAK,CAACoB,OAAN,GAAgB,EACZ,GAAGpB,KAAK,CAACoB,OADG;AAEZ,KAACjB,OAAO,CAACuB,QAAT,GAAoBvB,OAAO,CAACwB;AAFhB,GAAhB;AAIH,CALD;;AAOA,MAAMtB,UAAU,GAAG,CAAC+B,cAAD,EAAiBpC,KAAjB,KAA2B;AAC1CoC,EAAAA,cAAc,CACTC,aADL,CACmBrC,KAAK,CAACoB,OADzB,EAEKkB,IAFL,CAEUC,QAAQ,IAAIR,OAAO,CAACC,GAAR,CAAYO,QAAZ,CAFtB,EAGKC,KAHL,CAGWC,GAAG,IAAIV,OAAO,CAACW,KAAR,CAAcD,GAAd,CAHlB;AAIH,CALD","sourcesContent":["import ProcessService from '../../services/ProcessService';\r\nimport { processType } from './processType';\r\nimport { EMPTY_PROCESS, INITIAL_STATE } from '../../utils/constants';\r\n\r\nexport function processReducer(state = INITIAL_STATE, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case processType.HANDLE_SAVE:\r\n            handleSave(ProcessService, state);\r\n            break;\r\n        case processType.HANDLE_PROPERTY_CHANGE:\r\n            handlePropertyChange(state, payload);\r\n            break;\r\n        case processType.HANDLE_CONCERNS_CHANGE:\r\n            handleConcernsChange(state, payload);\r\n            break;\r\n        case processType.HANDLE_CONCERNS_ADDITION:\r\n            handleConcernsAddition(state);\r\n            break;\r\n        case processType.ASYNC_LOAD:\r\n            return {\r\n                ...state,\r\n                processList: payload\r\n            };\r\n        case processType.ASYNC_INSERT:\r\n            return {\r\n                ...state,\r\n                processEntry: EMPTY_PROCESS,\r\n            };\r\n        case processType.ASYNC_UPDATE:\r\n            return {\r\n                ...state,\r\n                processEntry: EMPTY_PROCESS,\r\n                processEntryId: 0\r\n            };\r\n        case processType.SET_DETAILING_OPTIONS:\r\n            return {\r\n                ...state,\r\n                detailingEntry: payload.process,\r\n                showDetailingEntry: payload.flag\r\n            };\r\n        case processType.SET_ENTRY_DIALOG_OPTIONS:\r\n            return {\r\n                ...state,\r\n                showEntryDialog: payload.flag,\r\n                processEntryId: payload.processEntryId,\r\n            };\r\n        case processType.PROCESS_ENTRY_PROPERTY_CHANGE:\r\n            return {\r\n                ...state,\r\n                processEntry: {\r\n                    ...state.processEntry,\r\n                    [payload.property]: payload.value\r\n                }\r\n            };\r\n        case processType.PROCESS_ENTRY_CONCERNS_ADDITION:\r\n            return {\r\n                ...state,\r\n                processEntry: {\r\n                    ...state.processEntry,\r\n                    processConcerns: [\r\n                        ...state.processEntry.processConcerns,\r\n                        payload.value\r\n                    ]\r\n                }\r\n            }\r\n        case processType.LOAD_ONE:\r\n            console.log(state, action);\r\n            return {\r\n                ...state,\r\n                processEntry: payload.data\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\nconst handleConcernsAddition = (state) => {\r\n    state.process.processConcerns\r\n        .push(state.newProcessConcerned);\r\n}\r\n\r\nconst handleConcernsChange = (state, payload) => {\r\n    state.newProcessConcerned = payload.value;\r\n}\r\n\r\nconst handlePropertyChange = (state, payload) => {\r\n    state.process = {\r\n        ...state.process,\r\n        [payload.property]: payload.value\r\n    };\r\n}\r\n\r\nconst handleSave = (processService, state) => {\r\n    processService\r\n        .createProcess(state.process)\r\n        .then(response => console.log(response))\r\n        .catch(err => console.error(err));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}